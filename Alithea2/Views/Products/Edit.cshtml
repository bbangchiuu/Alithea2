@using Alithea2.Models
@model Alithea2.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    Dictionary<String, String> errors = new Dictionary<string, string>();
    if (ViewBag.Errors != null)
    {
        errors = ViewBag.Errors as Dictionary<string, string>;
    }

    List<Category> listCategories = new List<Category>();
    if (ViewBag.listCategories != null)
    {
        listCategories = ViewBag.listCategories as List<Category>;
    }

    List<ProductCategory> listProductCategories = new List<ProductCategory>();
    if (ViewBag.listProductCategories != null)
    {
        listProductCategories = ViewBag.listProductCategories as List<ProductCategory>;
    }
}


<div class="row">
    <div class="col-md-8 mx-auto grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                @if (TempData["Error"] != null)
                {
                    <h4 class="text-danger">@TempData["Error"]</h4>
                }
                <h4 class="card-title">Product</h4>
                <p class="card-description">Edit Product</p>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ProductID)
                     <div class="form-group">
                         @Html.LabelFor(model => model.RoleNumber)
                         @Html.EditorFor(model => model.RoleNumber, new { htmlAttributes = new { @class = "form-control" } })
                         @Html.ValidationMessageFor(model => model.RoleNumber, errors.ContainsKey("RoleNumber") ? errors["RoleNumber"] : "", new { @class = "text-danger" })
                     </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductName)
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, errors.ContainsKey("ProductName") ? errors["ProductName"] : "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductDescription)
                        @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductDescription, errors.ContainsKey("CategoryDescription") ? errors["CategoryDescription"] : "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.UnitPrice)
                        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Quantity)
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <img id="preview" src="@Html.DisplayFor(model => model.ProductImage)" class="img-thumbnail" style="width: 100px" alt="Alternate Text" />
                        <div style="margin-top: 20px;">
                            @Html.LabelFor(model => model.ProductImage)
                            @Html.EditorFor(model => model.ProductImage, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
                            @Html.ValidationMessageFor(model => model.ProductImage, errors.ContainsKey("ProductImage") ? errors["ProductImage"] : "", new { @class = "text-danger" })
                            <div style="margin-top: 5px">
                                <button type="button" id="upload_widget" class="btn btn-primary">Upload files</button>
                            </div>
                        </div>
                    </div>
                    <select class="form-control" id="sort">
                        <option value="-1">Danh mục</option>
                        @for (var i = 0; i < listCategories.Count; i++)
                        {
                            <option value="@listCategories[i].CategoryID">@listCategories[i].CategoryName</option>
                        }
                    </select>

                    <div class="form-group" style="margin-top: 20px; margin-bottom: 50px;">
                        <span class="control-label col-md-2">Danh mục đã chọn: </span>
                        <div class="col-md-10" id="listCat">
                            @if (errors.ContainsKey("Category"))
                            {
                                <p class="text-danger">@errors["Category"]</p>
                            }
                            else
                            {
                                for (int i = 0; i < listProductCategories.Count; i++)
                                {
                                    <div class="badge badge-info" id="item-@listProductCategories[i].CategoryID">
                                        <input type="hidden" name="ints" value="@listProductCategories[i].CategoryID" />@listProductCategories[i].Category.CategoryName
                                        <i class="mdi mdi-backspace" onclick="delCate(@listProductCategories[i].CategoryID)" style="margin-left: 10px;"></i>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <div class="form-group hidden">
                        @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @* <input type="date" class = "form-control" name="datepicker" value="@string.Format("{0:yyyy-MM-dd}", Model.CreatedAt)"/> *@
                            @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
                            @* <input type="text" name="birthday" value="@Model.CreatedAt.Date" /> *@
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status)
                        @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                    <input type="submit" class="btn btn-gradient-primary mr-2" value="Cập nhật" />
                    <button type="button" class="btn btn-gradient-danger mr-3" data-toggle="modal" data-target="#myModal">
                        Xóa sản phẩm
                    </button>
                    <a class="btn btn-light" href="@Url.Action("Index")">
                        Cancel
                    </a>
                }
            </div>
        </div>
    </div>
</div>
<div class="modal" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Xóa?</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                Những đơn hàng của sản phâm này sẽ bị xóa hết. Bạn có chắc chắn muốn xóa
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                @using (Html.BeginForm("Delete/" + Model.ProductID, "Products", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <input type="submit" value="Có" class="btn btn-default btn btn-danger" />
                }
                <button type="button" class="btn btn-primary" data-dismiss="modal">Không</button>
            </div>

        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function delCate(item) {
            var idDiv = "#item-" + item;
            $(idDiv).remove();
        }

        $(document).ready(function () {
            $("#sort").change(function () {
                console.log($(this).val() + " - " + $("#sort option:selected").text());
                console.log($("#listCat").text().includes($("#sort option:selected").text()));
                console.log($("#sort option:selected").text());
                console.log($(this).val());
                console.log($(this).val() > 0);
                if ($(this).val() > 0) {
                    var text = '<div class="badge badge-info" id="item-' + $(this).val() + '"><input type="hidden" name="ints" value="' + $(this).val() + '" />' + $("#sort option:selected").text() + '<i class="mdi mdi-backspace" onclick="delCate(' + $(this).val() + ')" style="margin-left: 10px;"></i></div>';
                    $("#listCat").append(text);
                }
            });
        });
    </script>
    <script type="text/javascript">
        var myWidget = cloudinary.createUploadWidget({
            cloudName: 'bangnguyen',
            uploadPreset: 'Alithea'
        }, (error, result) => {
            if (!error && result && result.event === "success") {
                var imgLink = result.info.secure_url;
                document.querySelector("input[name='ProductImage']").value = imgLink;
                var imgPreview = document.getElementById("preview");
                imgPreview.src = imgLink;
                imgPreview.classList.remove("hidden");
            }
        }
        )

        document.getElementById("upload_widget").addEventListener("click", function () {
            myWidget.open();
        }, false);
    </script>
}
